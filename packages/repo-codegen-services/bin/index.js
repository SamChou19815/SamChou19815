module.exports=(()=>{"use strict";var __webpack_modules__={888:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:true});exports.createJSCodegenService=exports.createJsonCodegenService=void 0;exports.createJsonCodegenService=((e,t,n)=>({name:e,sourceFileIsRelevant:t,run:(e,t)=>n(e,JSON.parse(t))}));exports.createJSCodegenService=((name,sourceFileIsRelevant,run)=>({name:name,sourceFileIsRelevant:sourceFileIsRelevant,run:(sourceFilename,source)=>{const wrappedModuleCodeForEval=`((exports) => { ${source} return exports; })({})`;const evaluatedSource=eval(wrappedModuleCodeForEval);return run(sourceFilename,evaluatedSource)}}))},272:(e,t)=>{Object.defineProperty(t,"__esModule",{value:true});t.githubActionWorkflowToString=t.githubActionJobRunStep=t.githubActionJobActionStep=void 0;t.githubActionJobActionStep=((e,t={})=>({type:"use-action",actionName:e,actionArguments:t}));t.githubActionJobRunStep=((e,t)=>({type:"run",stepName:e,command:t}));const n=e=>{switch(e.type){case"use-action":{const t=`${" ".repeat(6)}- uses: ${e.actionName}\n`;if(Object.keys(e.actionArguments).length===0){return t}const n=Object.entries(e.actionArguments).map(([e,t])=>`${" ".repeat(10)}${e}: "${t}"`).join("\n");return`${t}${" ".repeat(8)}with:\n${n}\n`}case"run":{return`${" ".repeat(6)}- name: ${e.stepName}\n${" ".repeat(8)}run: ${e.command}\n`}}};const o=([e,t])=>{return`  ${e}:\n    runs-on: ubuntu-latest\n    steps:\n${t.map(n).join("")}`};t.githubActionWorkflowToString=(({workflowName:e,workflowtrigger:{triggerPaths:t,masterBranchOnly:n},workflowJobs:r})=>{const a=`# @${"generated"}\n\nname: ${e}\non:\n  push:\n    paths:\n${t.map(e=>`      - '${e}'`).join("\n")}\n${n?`    branches:\n      - master\n`:""}\njobs:\n${r.map(o).join("")}`;return a})},202:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:true});const o=n(747);const r=n(622);const a=n(272);const i=n(888);const u=[a.githubActionJobActionStep("actions/checkout@v2",{"fetch-depth":"2"}),a.githubActionJobActionStep("actions/setup-node@v2-beta"),a.githubActionJobActionStep("actions/cache@v2",{path:".yarn/cache\\n.pnp.js",key:"yarn-berry-${{ hashFiles('**/yarn.lock') }}","restore-keys":"yarn-berry-"}),a.githubActionJobRunStep("Yarn Install","yarn install --immutable")];const c=(e,t,n)=>{var a,i;return((i=(a=JSON.parse(o.readFileSync(r.join(e.information[t].workspaceLocation,"package.json")).toString()))===null||a===void 0?void 0:a.scripts)===null||i===void 0?void 0:i[n])!=null};const s=i.createJsonCodegenService("GitHub Actions Workflows Codegen",e=>e==="workspaces.json",(e,t)=>[{outputFilename:".github/workflows/generated-general.yml",outputContent:a.githubActionWorkflowToString({workflowName:"General",workflowtrigger:{triggerPaths:["**"],masterBranchOnly:false},workflowJobs:[["lint",[...u,a.githubActionJobRunStep("Format Check","yarn format:check"),a.githubActionJobRunStep("Lint","yarn lint")]],["build",[...u,a.githubActionJobRunStep("Build","yarn compile")]],["validate",[...u,a.githubActionJobRunStep("Check Codegen","yarn codegen"),a.githubActionJobRunStep("Check changed","if [[ `git status --porcelain` ]]; then exit 1; fi")]],["test",[...u,a.githubActionJobRunStep("Test","yarn test")]]]})},...t.topologicallyOrdered.filter(e=>c(t,e,"deploy")).map(e=>{const n=`cd-${e}`;return{outputFilename:`.github/workflows/generated-${n}.yml`,outputContent:a.githubActionWorkflowToString({workflowName:`CD ${e}`,workflowtrigger:{triggerPaths:[...t.information[e].dependencyChain.map(e=>`${t.information[e].workspaceLocation}/**`),"configuration/**",`.github/workflows/generated-*-${e}.yml`],masterBranchOnly:true},workflowJobs:[["deploy",[...u,a.githubActionJobRunStep("Build",`yarn workspace ${e} build`),a.githubActionJobRunStep("Install firebase","sudo npm install -g firebase-tools"),a.githubActionJobRunStep("Deploy",`FIREBASE_TOKEN=\${{ secrets.FIREBASE_TOKEN }} yarn workspace ${e} deploy`)]]]})}})]);t.default=s},24:function(e,t,n){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};const r=o(n(202));const a={name:"Ignore Files Codegen",sourceFileIsRelevant:e=>e===".gitignore",run:(e,t)=>{const n=`# @${"generated"}\n\n${t}\n# additions\n.yarn\n**/bin/\n**/out/\n**/build/\n**/dist/\n`;return[{outputFilename:".eslintignore",outputContent:n},{outputFilename:".prettierignore",outputContent:n}]}};const i=[r.default,a];e.exports=i},747:e=>{e.exports=require("fs")},622:e=>{e.exports=require("path")}};var __webpack_module_cache__={};function __webpack_require__(e){if(__webpack_module_cache__[e]){return __webpack_module_cache__[e].exports}var t=__webpack_module_cache__[e]={exports:{}};var n=true;try{__webpack_modules__[e].call(t.exports,t,t.exports,__webpack_require__);n=false}finally{if(n)delete __webpack_module_cache__[e]}return t.exports}__webpack_require__.ab=__dirname+"/";return __webpack_require__(24)})();