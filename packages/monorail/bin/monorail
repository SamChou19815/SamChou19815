#!/usr/bin/env node
module.exports=function(e,t){"use strict";var n={};function __webpack_require__(t){if(n[t]){return n[t].exports}var o=n[t]={i:t,l:false,exports:{}};var r=true;try{e[t].call(o.exports,o,o.exports,__webpack_require__);r=false}finally{if(r)delete n[t]}o.l=true;return o.exports}__webpack_require__.ab=__dirname+"/";function startup(){return __webpack_require__(543)}return startup()}({129:function(e){e.exports=require("child_process")},187:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});const r=n(926);const s=n(969);const i=n(871);const c=o(n(478));const a=n(499);const u=()=>["ts-js",{workflowName:"TS and JS",workflowtrigger:{triggerPaths:[".github/workflows/generated-ts-js.yml","**.js","**.ts","**.jsx","**.tsx"],masterBranchOnly:false},workflowJobs:[{jobName:"lint",jobSteps:[...a.yarnWorkspaceBoilterplateSetupSteps,s.githubActionJobRunStep("Lint","yarn lint")]},{jobName:"test",jobSteps:[...a.yarnWorkspaceBoilterplateSetupSteps,s.githubActionJobRunStep("Test","yarn test")]}]}];const p=()=>["codegen-porcelain",{workflowName:"lint-generated",workflowtrigger:{triggerPaths:["**"],masterBranchOnly:false},workflowJobs:[{jobName:"lint",jobSteps:[i.GITHUB_ACTIONS_CHECKOUT_STEP,i.GITHUB_ACTIONS_SETUP_NODE_STEP,s.githubActionJobRunStep("Codegen",`${r.PROJECT_CONFIGURATION.binary} codegen`),s.githubActionJobRunStep("Check changed","git status --porcelain")]}]}];const l={serviceName:"Generate GitHub Actions Workflow",generatedFilenamePattern:".github/workflows/generated-*",generatedCodeContentList:[u(),p(),...Object.entries(a.getYarnWorkspaceWorkflows(c.default))].map(([e,t])=>({pathForGeneratedCode:`.github/workflows/generated-${e}.yml`,generatedCode:s.githubActionWorkflowToString(t)}))};t.default=l},309:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:true});const o=n(747);const r=n(622);const s=(e,t)=>{o.mkdirSync(r.dirname(t),{recursive:true});o.copyFileSync(e,t)};const i=()=>{const e=r.join("configuration","sync-configuration.json");if(!o.existsSync(e)){return}const t=JSON.parse(o.readFileSync(e).toString());Object.entries(t).forEach(([e,t])=>{Object.entries(t).forEach(([t,n])=>{s(t,r.join("..",e,n))})})};t.default=i},349:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:true});const o=n(747);const r=o.readFileSync(".gitignore");const s=o.readFileSync("configuration/styleignore.additions");const i=`# @generated\n\n${r}\n${s}`;const c={serviceName:"Generate ignore files derived from .gitignore",generatedCodeContentList:[{pathForGeneratedCode:".eslintignore",generatedCode:i},{pathForGeneratedCode:".prettierignore",generatedCode:i}]};t.default=c},370:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});const r=n(129);const s=n(747);const i=o(n(187));const c=o(n(349));const a=o(n(485));const u=[i.default,c.default,a.default];const p=()=>{u.forEach(e=>{const{generatedFilenamePattern:t,generatedCodeContentList:n}=e;if(t!=null){r.spawnSync("rm",[t],{shell:true})}n.forEach(({pathForGeneratedCode:e,generatedCode:t})=>s.writeFileSync(e,t))})};t.default=p},463:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:true});const o=n(129);const r=n(747);const s=n(622);const i=e=>{if(e==null){return undefined}if(typeof e!=="object"){throw new Error("Invalid codegen configuration. It should be an object.")}const{sources:t,output:n}=e;if(typeof t!=="string"||typeof n!=="string"){throw new Error("Invalid codegen configuration. `sources` should be a string!")}if(typeof n!=="string"){throw new Error("Invalid codegen configuration. `output` should be a string!")}return{sources:t,output:n}};const c=()=>{const e=new Map;const t=o.spawnSync("yarn",["workspaces","list","-v","--json"],{shell:true});const n=t.stdout.toString().trim();const c=`[${n.split("\n").join(",")}]`;const a=JSON.parse(c);a.forEach(({name:t,location:n,workspaceDependencies:o})=>{var c,a;if(t==null){return}const u=o.map(e=>{if(!e.startsWith("packages/")){throw new Error(`Bad dependency of ${t}: ${e}`)}return e.substring("packages/".length)});const p=JSON.parse(r.readFileSync(s.join(n,"package.json")).toString());e.set(t,{workspaceLocation:n,inRepoWorkspaceDependencies:u,devSamRepositoryDependencies:(c=p.devSamRepositoryDependencies)!==null&&c!==void 0?c:[],deploymentDependencies:(a=p.deploymentDependencies)!==null&&a!==void 0?a:[],codegenConfiguration:i(p.codegenConfiguration)})});return e};t.default=c},477:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:true});const o=n(926);const r=e=>{const t=[];const n=[];const r=[];e.forEach(e=>{if(o.PROJECT_CONFIGURATION.toolingPrefixes.some(t=>e.startsWith(t))){t.push(e)}else if(e.startsWith("lib-")){n.push(e)}else{r.push(e)}});return{toolingWorkspaces:t,libraryWorkspaces:n,projectWorkspaces:r}};t.default=r},478:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:true});const n={};t.default=n},485:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:true});const o=n(740);const r={serviceName:"Generate static json",generatedCodeContentList:[{pathForGeneratedCode:"configuration/libraries.json",generatedCode:`${JSON.stringify(o.libraryWorkspaces,undefined,2)}\n`}]};t.default=r},499:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:true});t.getYarnWorkspaceWorkflows=t.yarnWorkspaceBoilterplateSetupSteps=void 0;const o=n(740);const r=n(969);const s=n(871);t.yarnWorkspaceBoilterplateSetupSteps=[s.GITHUB_ACTIONS_CHECKOUT_STEP,s.GITHUB_ACTIONS_SETUP_NODE_STEP,s.GITHUB_ACTIONS_USE_YARN_CACHE_STEP,r.githubActionJobRunStep("Yarn Install","yarn install")];const i=e=>[...o.getYarnWorkspaceInRepoDependencyChain(e).map(e=>`${o.getYarnWorkspaceLocation(e)}/**`),"package.json","yarn.lock","configuration/**",`.github/workflows/generated-*-${e}.yml`];const c=(e,n)=>({workflowName:`CI ${e}`,workflowtrigger:{triggerPaths:i(e),masterBranchOnly:false},workflowJobs:[{jobName:"build",jobSteps:[...t.yarnWorkspaceBoilterplateSetupSteps,...n,...o.getYarnWorkspaceDevSamRepositoryDependencies(e).map(s.getDevSamRepositoryDependencySetupSteps).flat(),r.githubActionJobRunStep("Compile",`yarn workspace ${e} compile`)]}]});const a=(e,n)=>({workflowName:`CD ${e}`,workflowtrigger:{triggerPaths:i(e),masterBranchOnly:true},workflowSecrets:["FIREBASE_TOKEN"],workflowJobs:[{jobName:"deploy",jobSteps:[...t.yarnWorkspaceBoilterplateSetupSteps,...n,...o.getYarnWorkspaceDevSamRepositoryDependencies(e).map(s.getDevSamRepositoryDependencySetupSteps).flat(),...o.getYarnWorkspaceDeploymentDependencies(e).map(s.getDeploymentDependencySetupStep),r.githubActionJobRunStep("Build",`yarn workspace ${e} build`),r.githubActionJobRunStep("Deploy",`yarn workspace ${e} deploy`)]}]});const u=e=>e.substring(e.indexOf("/")+1);t.getYarnWorkspaceWorkflows=((e={})=>Object.fromEntries([...[...o.toolingWorkspaces,...o.libraryWorkspaces,...o.projectWorkspaces].map(t=>{var n;const o=`ci-${u(t)}`;return[o,c(t,(n=e[o])!==null&&n!==void 0?n:[])]}),...o.projectWorkspaces.map(t=>{var n;const o=`cd-${t}`;return[o,a(t,(n=e[o])!==null&&n!==void 0?n:[])]})]))},543:function(e,t,n){"use strict";var o=this&&this.__awaiter||function(e,t,n,o){function adopt(e){return e instanceof n?e:new n(function(t){t(e)})}return new(n||(n=Promise))(function(n,r){function fulfilled(e){try{step(o.next(e))}catch(e){r(e)}}function rejected(e){try{step(o["throw"](e))}catch(e){r(e)}}function step(e){e.done?n(e.value):adopt(e.value).then(fulfilled,rejected)}step((o=o.apply(e,t||[])).next())})};var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});process.chdir(n(926).PROJECT_ROOT_DIRECTORY);const s=r(n(549));const i=r(n(609));const c=r(n(370));const a=r(n(309));const u=()=>o(void 0,void 0,void 0,function*(){try{switch(s.default()){case"CODEGEN":c.default();return;case"REBUILD":yield i.default();return;case"SYNC":a.default();return;default:throw new Error}}catch(e){console.error(e.message);process.exit(1)}});u()},549:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:true});const n=()=>{const e=process.argv.slice(2);if(e.length===0){return"CODEGEN"}switch(e[0].toLowerCase()){case"codegen":return"CODEGEN";case"rebuild":case"r":return"REBUILD";case"sync":case"s":return"SYNC";default:throw new Error(`Unknown command: ${e[0]}`)}};t.default=n},609:function(e,t,n){"use strict";var o=this&&this.__awaiter||function(e,t,n,o){function adopt(e){return e instanceof n?e:new n(function(t){t(e)})}return new(n||(n=Promise))(function(n,r){function fulfilled(e){try{step(o.next(e))}catch(e){r(e)}}function rejected(e){try{step(o["throw"](e))}catch(e){r(e)}}function step(e){e.done?n(e.value):adopt(e.value).then(fulfilled,rejected)}step((o=o.apply(e,t||[])).next())})};var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});const s=n(129);const i=r(n(888));const c=()=>o(void 0,void 0,void 0,function*(){console.log("--- Monorail Cached Build Service ---");const e=i.default();if(e.length===0){console.log("[✓] No need to rebuild!");return}console.group(`[${e.join(", ")}] needs to be rebuilt!`);const t=e.map(e=>{console.log(`Rebuiding \`${e}\`...`);return[e,s.spawnSync("yarn",["workspace",e,"codegen"],{shell:true,stdio:"inherit"}).status===0]});console.groupEnd();const n=t.filter(([,e])=>!e).map(([e])=>e);if(n.length===0){console.log("\n[✓] All workspaces have been successfully rebuilt!");return}throw new Error(`[x] [${n.join(", ")}] failed to exit with 0`)});t.default=c},622:function(e){e.exports=require("path")},740:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};var r;Object.defineProperty(t,"__esModule",{value:true});t.getYarnWorkspaceDeploymentDependencies=t.getYarnWorkspaceDevSamRepositoryDependencies=t.getYarnWorkspaceInRepoDependencyChain=t.getYarnWorkspaceLocation=t.projectWorkspaces=t.libraryWorkspaces=t.toolingWorkspaces=t.workspaceInformation=void 0;const s=o(n(463));const i=o(n(477));t.workspaceInformation=s.default();r=i.default(Array.from(t.workspaceInformation.keys())),t.toolingWorkspaces=r.toolingWorkspaces,t.libraryWorkspaces=r.libraryWorkspaces,t.projectWorkspaces=r.projectWorkspaces;const c=e=>{const n=t.workspaceInformation.get(e);if(n==null){throw new Error(`Workspace ${e} is not found!`)}return n};t.getYarnWorkspaceLocation=(e=>c(e).workspaceLocation);t.getYarnWorkspaceInRepoDependencyChain=(e=>{const t=[];const n=[];const o=new Set;const r=new Set;const s=e=>{if(r.has(e)){if(!o.has(e)){return}n.push(e);const t=n.indexOf(e);const r=n.slice(t,n.length).join(" -> ");throw new Error(`Cyclic dependency detected: ${r}`)}const i=c(e).inRepoWorkspaceDependencies;r.add(e);n.push(e);o.add(e);i.forEach(s);o.delete(e);n.pop();t.push(e)};s(e);return t});t.getYarnWorkspaceDevSamRepositoryDependencies=(e=>c(e).devSamRepositoryDependencies);t.getYarnWorkspaceDeploymentDependencies=(e=>c(e).deploymentDependencies)},747:function(e){e.exports=require("fs")},871:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:true});t.getDeploymentDependencySetupStep=t.getDevSamRepositoryDependencySetupSteps=t.GITHUB_ACTIONS_USE_YARN_CACHE_STEP=t.GITHUB_ACTIONS_SETUP_NODE_STEP=t.GITHUB_ACTIONS_CHECKOUT_STEP=void 0;const o=n(926);const r=n(969);t.GITHUB_ACTIONS_CHECKOUT_STEP=r.githubActionJobActionStep("actions/checkout@v2");t.GITHUB_ACTIONS_SETUP_NODE_STEP=r.githubActionJobActionStep("actions/setup-node@v2-beta");t.GITHUB_ACTIONS_USE_YARN_CACHE_STEP=r.githubActionJobActionStep("actions/cache@v2",{path:".yarn/cache\n.pnp.js",key:"yarn-berry-${{ hashFiles('**/yarn.lock') }}","restore-keys":"yarn-berry-"});t.getDevSamRepositoryDependencySetupSteps=(e=>[r.githubActionJobRunStep(`Checkout ${o.PROJECT_CONFIGURATION.organizationName}/${e}`,`cd ../ && git clone https://\${{ secrets.DEPLOY_GH_PAGE_TOKEN }}@github.com/${o.PROJECT_CONFIGURATION.organizationName}/${e} --depth 1`),r.githubActionJobRunStep(`Sanity Check ${e} setup`,`cat ../${e}/README.md`)]);const s=r.githubActionJobActionStep("GoogleCloudPlatform/github-actions/setup-gcloud@master",{project_id:"developer-sam",service_account_key:"${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}",export_default_credentials:"true"});t.getDeploymentDependencySetupStep=(e=>{if(e==="gcloud"){return s}throw new Error(`Unsupported deployment dependency: ${e}`)})},888:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:true});const o=n(747);const r=n(622);const s=n(740);const i=(e,t)=>o.statSync(e).mtime.getTime()>=t;const c=(e,t,n)=>{const s=r.join(e,n);if(!o.existsSync(s)){return true}const c=o.statSync(s).mtime.getTime();const a=r.resolve(r.join(e,t));const u=e=>{if(o.lstatSync(e).isFile()){return i(e,c)}return o.readdirSync(e).some(t=>u(r.join(e,t)))};return u(a)};const a=()=>Array.from(s.workspaceInformation.entries()).filter(([,{workspaceLocation:e,codegenConfiguration:t}])=>{return t!=null&&c(e,t.sources,t.output)}).map(([e])=>e);t.default=a},926:function(e,t,n){"use strict";var o;Object.defineProperty(t,"__esModule",{value:true});t.PROJECT_CONFIGURATION=t.PROJECT_ROOT_DIRECTORY=void 0;const r=n(747);const s=n(622);const i=e=>{if(typeof e!=="object"||e==null){throw new Error(`Unexpected configuration format. Bad object: ${JSON.stringify(e)}`)}const{binary:t,organizationName:n,toolingPrefixes:o}=e;if(typeof t!=="string"){throw new Error("`binary` must be string!")}if(typeof n!=="string"){throw new Error("`organizationName` must be string!")}if(!Array.isArray(o)){throw new Error("`toolingPrefixes` must be string array!")}const r=o.filter(e=>typeof e==="string");if(r.length!==o.length){throw new Error("`toolingPrefixes` must be string array!")}return{binary:t,organizationName:n,toolingPrefixes:r}};const c=()=>{let e=process.cwd();while(e!=="/"){const t=s.join(e,"package.json");if(r.existsSync(t)&&r.lstatSync(t).isFile()){const n=JSON.parse(r.readFileSync(t).toString());if(Array.isArray(n.workspaces)){return[e,i(n.repoToolsConfiguration)]}}e=s.dirname(e)}throw new Error("No configuration found. Abort!")};o=c(),t.PROJECT_ROOT_DIRECTORY=o[0],t.PROJECT_CONFIGURATION=o[1]},969:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:true});t.githubActionWorkflowToString=t.githubActionJobRunStep=t.githubActionJobActionStep=void 0;t.githubActionJobActionStep=((e,t={})=>({type:"use-action",actionName:e,actionArguments:t}));t.githubActionJobRunStep=((e,t)=>({type:"run",stepName:e,command:t}));const n=e=>{switch(e.type){case"use-action":{const t=`      - uses: ${e.actionName}\n`;if(Object.keys(e.actionArguments).length===0){return t}const n=Object.entries(e.actionArguments).map(([e,t])=>{const n=t.split("\n");if(n.length===1){return`          ${e}: ${n[0]}`}return`          ${e}: |\n${n.map(e=>`            ${e}`).join("\n")}`}).join("\n");return`${t}        with:\n${n}\n`}case"run":{const t=`      - name: ${e.stepName}\n`;const n=e.command.split("\n");if(n.length===1){return`${t}        run: ${n[0]}\n`}return`${t}        run: |\n${n.map(e=>`          ${e}\n`).join("")}`}default:throw new Error}};const o=({jobName:e,jobSteps:t})=>{return`  ${e}:\n    runs-on: ubuntu-latest\n    steps:\n${t.map(n).join("")}`};t.githubActionWorkflowToString=(({workflowName:e,workflowtrigger:{triggerPaths:t,masterBranchOnly:n},workflowSecrets:r=[],workflowJobs:s})=>{const i=`# @generated\n\nname: ${e}\non:\n  push:\n    paths:\n${t.map(e=>`      - '${e}'\n`).join("")}${n?`    branches:\n      - master\n`:""}${r.length>0?`env:\n${r.map(e=>`  ${e}: \${{ secrets.${e} }}`).join("\n")}\n`:""}\njobs:\n${s.map(o).join("")}`;return i})}});