#!/usr/bin/env node
module.exports=(()=>{"use strict";var e={335:(e,n,t)=>{t.r(n);const o=require("fs");const r=require("path");const i=require("child_process");const s=e=>e!=null;function assertNotNull(e){if(e==null){throw new Error(`Value is asserted to be not null, but it is ${e}.`)}}const c=e=>{assertNotNull(e);return e};const a=e=>{const n=[];const t=[];e.trim().split("\n").forEach(e=>{const o=e.trim().split(/\s/).filter(e=>e.trim().length>0);if(o.length===0){return}const[r,i,s]=o;assertNotNull(r);assertNotNull(i);if(r==="A"||r==="M"){n.push(i)}else if(r==="D"){t.push(i)}else if(r.startsWith("R")){t.push(i);assertNotNull(s);n.push(s)}});return{changedFiles:n,deletedFiles:t}};const l=(e,n=".")=>{const t=(e,t)=>{const o=(0,i.spawnSync)("git",["diff",e,...t?[t]:[],"--name-status","--diff-filter=ADRM","--",n]).stdout.toString();return a(o)};if(process.env.CI){return t("HEAD^","HEAD")}return t("origin/master")};const u=l;const d=()=>{let e=process.cwd();while(e!=="/"){const n=(0,r.join)(e,"package.json");if((0,o.existsSync)(n)&&(0,o.lstatSync)(n).isFile()){const t=JSON.parse((0,o.readFileSync)(n).toString());if(Array.isArray(t.workspaces)){return e}}e=(0,r.dirname)(e)}throw new Error("No root package.json found. Abort!")};const f=()=>{try{process.chdir(d())}catch(e){console.error(e.message);process.exit(1)}};var p=undefined&&undefined.__awaiter||function(e,n,t,o){function adopt(e){return e instanceof t?e:new t(function(n){n(e)})}return new(t||(t=Promise))(function(t,r){function fulfilled(e){try{step(o.next(e))}catch(e){r(e)}}function rejected(e){try{step(o["throw"](e))}catch(e){r(e)}}function step(e){e.done?t(e.value):adopt(e.value).then(fulfilled,rejected)}step((o=o.apply(e,n||[])).next())})};const m=e=>p(void 0,void 0,void 0,function*(){const n=(0,o.existsSync)(e.lastestKnownGoodRunTimeFilename)?JSON.parse((0,o.readFileSync)(e.lastestKnownGoodRunTimeFilename).toString()):{};const t=yield e.needRerun(n);const i=yield Promise.all(t.map(t=>p(void 0,void 0,void 0,function*(){return[t,yield e.rerun(t,n)]})));const s=(new Date).getTime();const c=[];i.forEach(([e,t])=>{if(t){n[e]=s}else{c.push(e)}});(0,o.mkdirSync)((0,r.dirname)(e.lastestKnownGoodRunTimeFilename),{recursive:true});(0,o.writeFileSync)(e.lastestKnownGoodRunTimeFilename,JSON.stringify(n,undefined,2));return c});const y=m;var h=undefined&&undefined.__awaiter||function(e,n,t,o){function adopt(e){return e instanceof t?e:new t(function(n){n(e)})}return new(t||(t=Promise))(function(t,r){function fulfilled(e){try{step(o.next(e))}catch(e){r(e)}}function rejected(e){try{step(o["throw"](e))}catch(e){r(e)}}function step(e){e.done?t(e.value):adopt(e.value).then(fulfilled,rejected)}step((o=o.apply(e,n||[])).next())})};const w={fileExists:e=>(0,o.existsSync)(e),readFile:e=>(0,o.readFileSync)(e).toString(),writeFile:(e,n)=>{(0,o.mkdirSync)((0,r.dirname)(e),{recursive:true});(0,o.writeFileSync)(e,n)},deleteFile:e=>(0,o.unlinkSync)(e)};const v=".codegen/mappings.json";const g=(e,n,t,o,r=false)=>{const i=e=>{if(r)console.log(e)};i("-------------------- sam-codegen --------------------");const s=o.fileExists(v)?JSON.parse(o.readFile(v)).mappings:{};const c=new Set(e);const a={};Object.entries(s).forEach(([e,n])=>n.forEach(n=>{a[n]=e}));const l=e=>{const n=a[e];if(n!=null)c.add(n)};e.forEach(l);n.forEach(l);const u=new Set;n.forEach(e=>{var n;((n=s[e])!==null&&n!==void 0?n:[]).forEach(e=>{if(o.fileExists(e)){o.deleteFile(e);u.add(e)}});delete s[e]});if(u.size>0){const e=Array.from(u).sort((e,n)=>e.localeCompare(n));i(`[✓] Deleted orphan generated files: [${e.join(", ")}]...`)}else{i("[✓] No orphan generated files.")}const d=new Set;const f=(e,n)=>e.localeCompare(n);t.forEach(({name:e,sourceFileIsRelevant:n,run:t})=>{const r=(e,n)=>{const r=t(e,n);const i=new Set;r.forEach(({outputFilename:e,outputContent:n})=>{o.writeFile(e,n);d.add(e);i.add(e)});s[e]=Array.from(i).sort(f)};i(`> Running ${e}...`);if(n==null){r(`__SYNTHETIC_CODEGEN__${e}__`,"")}else{c.forEach(e=>{if(n(e)){r(e,o.readFile(e))}})}});o.writeFile(v,JSON.stringify({__type__:"@"+"generated",mappings:Object.fromEntries(Object.entries(s).sort(([e],[n])=>f(e,n)))},undefined,2));const p=Array.from(d).sort(f);if(p.length===0){i("[✓] No generated code updates.")}else{i(`[✓] Updated generated files:\n${p.map(e=>`- ${e}`).join("\n")}`)}return p};const _=(e,n=false)=>h(void 0,void 0,void 0,function*(){yield y({lastestKnownGoodRunTimeFilename:(0,r.join)(d(),".codegen","cache.json"),needRerun:()=>h(void 0,void 0,void 0,function*(){return["codegen"]}),rerun:(t,o)=>h(void 0,void 0,void 0,function*(){var t;const r=(t=o["codegen"])!==null&&t!==void 0?t:0;const{changedFiles:i,deletedFiles:s}=u(r);g(i,s,e,w,n);return true})})});const S=(e,n={})=>({type:"use-action",actionName:e,actionArguments:n});const k=(e,n)=>({type:"run",stepName:e,command:n});const $=e=>{switch(e.type){case"use-action":{const n=`${" ".repeat(6)}- uses: ${e.actionName}\n`;if(Object.keys(e.actionArguments).length===0){return n}const t=Object.entries(e.actionArguments).map(([e,n])=>`${" ".repeat(10)}${e}: "${n}"`).join("\n");return`${n}${" ".repeat(8)}with:\n${t}\n`}case"run":{return`${" ".repeat(6)}- name: ${e.stepName}\n${" ".repeat(8)}run: ${e.command}\n`}}};const b=([e,n])=>{return`  ${e}:\n    runs-on: ubuntu-latest\n    steps:\n${n.map($).join("")}`};const N=e=>{if(e==null){return`on:\n  push:\n    branches:\n      - master\n  pull_request:`}return`on:\n  push:\n    paths:\n${e.map(e=>`${" ".repeat(6)}- '${e}'`).join("\n")}\n    branches:\n      - master`};const j=e=>{const n=`# @${"generated"}\n\nname: ${e.workflowName}\n${N(e.workflowMasterBranchOnlyTriggerPaths)}\n\njobs:\n${e.workflowJobs.map(b).join("")}`;return n};const E=[S("actions/checkout@v2",{"fetch-depth":"2"}),S("actions/setup-node@v2-beta"),S("actions/cache@v2",{path:".yarn/cache\\n.pnp.js",key:"yarn-berry-${{ hashFiles('**/yarn.lock') }}","restore-keys":"yarn-berry-"}),k("Yarn Install","yarn install --immutable")];const F=(e,n,t)=>{var i,s;return((s=(i=JSON.parse((0,o.readFileSync)((0,r.join)(c(e.information[n]).workspaceLocation,"package.json")).toString()))===null||i===void 0?void 0:i.scripts)===null||s===void 0?void 0:s[t])!=null};const x={name:"GitHub Actions Workflows Codegen",run:()=>{const e=JSON.parse((0,o.readFileSync)("workspaces.json").toString());return[{outputFilename:".github/workflows/generated-general.yml",outputContent:j({workflowName:"General",workflowJobs:[["lint",[...E,k("Format Check","yarn format:check"),k("Lint","yarn lint")]],["build",[...E,k("Build","yarn compile")]],["validate",[...E,k("Check Codegen","yarn codegen"),k("Check changed","if [[ `git status --porcelain` ]]; then exit 1; fi")]],["test",[...E,k("Test","yarn test")]]]})},...e.topologicallyOrdered.filter(n=>F(e,n,"deploy")).map(n=>{var t,o;const r=`cd-${n}`;return{outputFilename:`.github/workflows/generated-${r}.yml`,outputContent:j({workflowName:`CD ${n}`,workflowMasterBranchOnlyTriggerPaths:[...((o=(t=e.information[n])===null||t===void 0?void 0:t.dependencyChain)!==null&&o!==void 0?o:[]).map(n=>{var t;return`${(t=e.information[n])===null||t===void 0?void 0:t.workspaceLocation}/**`}),"configuration/**",`.github/workflows/generated-*-${n}.yml`],workflowJobs:[["deploy",[...E,k("Build",`yarn workspace ${n} build`),k("Install firebase","sudo npm install -g firebase-tools"),k("Deploy",`FIREBASE_TOKEN=\${{ secrets.FIREBASE_TOKEN }} yarn workspace ${n} deploy`)]]]})}})]}};const O=x;const C=[O];var A=undefined&&undefined.__awaiter||function(e,n,t,o){function adopt(e){return e instanceof t?e:new t(function(n){n(e)})}return new(t||(t=Promise))(function(t,r){function fulfilled(e){try{step(o.next(e))}catch(e){r(e)}}function rejected(e){try{step(o["throw"](e))}catch(e){r(e)}}function step(e){e.done?t(e.value):adopt(e.value).then(fulfilled,rejected)}step((o=o.apply(e,n||[])).next())})};const J=()=>A(void 0,void 0,void 0,function*(){try{yield _(C,true)}catch(e){console.error(e);process.exit(1)}});J()}};var n={};function __webpack_require__(t){if(n[t]){return n[t].exports}var o=n[t]={exports:{}};var r=true;try{e[t](o,o.exports,__webpack_require__);r=false}finally{if(r)delete n[t]}return o.exports}(()=>{__webpack_require__.r=(e=>{if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(e,"__esModule",{value:true})})})();__webpack_require__.ab=__dirname+"/";return __webpack_require__(335)})();