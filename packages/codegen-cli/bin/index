#!/usr/bin/env node
module.exports=(()=>{"use strict";var e={906:(e,n,t)=>{t.r(n);const r=require("fs");const o=require("path");const s=require("child_process");const i=e=>e!=null;function assertNotNull(e){if(e==null){throw new Error(`Value is asserted to be not null, but it is ${e}.`)}}const a=e=>{assertNotNull(e);return e};const c=e=>{const n=[];const t=[];e.trim().split("\n").forEach(e=>{const r=e.trim().split(/\s/).filter(e=>e.trim().length>0);if(r.length===0){return}const[o,s,i]=r;assertNotNull(o);assertNotNull(s);if(o==="A"||o==="M"){n.push(s)}else if(o==="D"){t.push(s)}else if(o.startsWith("R")){t.push(s);assertNotNull(i);n.push(i)}});return{changedFiles:n,deletedFiles:t}};const l=(e=".")=>{const n=(n,t)=>{const r=(0,s.spawnSync)("git",["diff",n,...t?[t]:[],"--name-status","--diff-filter=ADRM","--",e]).stdout.toString();return c(r)};if(process.env.CI){return n("HEAD^","HEAD")}return n("origin/master")};const u=l;const f={fileExists:e=>(0,r.existsSync)(e),readFile:e=>(0,r.readFileSync)(e).toString(),writeFile:(e,n)=>{(0,r.mkdirSync)((0,o.dirname)(e),{recursive:true});(0,r.writeFileSync)(e,n)},deleteFile:e=>(0,r.unlinkSync)(e)};const p=".codegen/mappings.json";const d=(e,n,t,r,o=false)=>{const s=e=>{if(o)console.log(e)};s("-------------------- sam-codegen --------------------");const i=r.fileExists(p)?JSON.parse(r.readFile(p)).mappings:{};const a=new Set(e);const c={};Object.entries(i).forEach(([e,n])=>n.forEach(n=>{c[n]=e}));const l=e=>{const n=c[e];if(n!=null)a.add(n)};e.forEach(l);n.forEach(l);const u=new Set;n.forEach(e=>{var n;((n=i[e])!==null&&n!==void 0?n:[]).forEach(e=>{if(r.fileExists(e)){r.deleteFile(e);u.add(e)}});delete i[e]});if(u.size>0){const e=Array.from(u).sort((e,n)=>e.localeCompare(n));s(`[✓] Deleted orphan generated files: [${e.join(", ")}]...`)}else{s("[✓] No orphan generated files.")}const f=new Set;const d=(e,n)=>e.localeCompare(n);t.forEach(({name:e,sourceFileIsRelevant:n,run:t})=>{const o=(e,n)=>{const o=t(e,n);const s=new Set;o.forEach(({outputFilename:e,outputContent:n})=>{r.writeFile(e,n);f.add(e);s.add(e)});i[e]=Array.from(s).sort(d)};s(`> Running ${e}...`);if(n==null){o(`__SYNTHETIC_CODEGEN__${e}__`,"")}else{a.forEach(e=>{if(n(e)){o(e,r.readFile(e))}})}});r.writeFile(p,JSON.stringify({__type__:"@"+"generated",mappings:Object.fromEntries(Object.entries(i).sort(([e],[n])=>d(e,n)))},undefined,2));const m=Array.from(f).sort(d);if(m.length===0){s("[✓] No generated code updates.")}else{s(`[✓] Updated generated files:\n${m.map(e=>`- ${e}`).join("\n")}`)}return m};const m=(e,n=false)=>{const{changedFiles:t,deletedFiles:r}=u();d(t,r,e,f,n)};const h=(e,n={})=>({type:"use-action",actionName:e,actionArguments:n});const y=(e,n)=>({type:"run",stepName:e,command:n});const w=e=>{switch(e.type){case"use-action":{const n=`${" ".repeat(6)}- uses: ${e.actionName}\n`;if(Object.keys(e.actionArguments).length===0){return n}const t=Object.entries(e.actionArguments).map(([e,n])=>`${" ".repeat(10)}${e}: "${n}"`).join("\n");return`${n}${" ".repeat(8)}with:\n${t}\n`}case"run":{return`${" ".repeat(6)}- name: ${e.stepName}\n${" ".repeat(8)}run: ${e.command}\n`}}};const _=([e,n])=>{return`  ${e}:\n    runs-on: ubuntu-latest\n    steps:\n${n.map(w).join("")}`};const g=e=>{if(e==null){return`on:\n  push:\n    branches:\n      - master\n  pull_request:`}return`on:\n  push:\n    paths:\n${e.map(e=>`${" ".repeat(6)}- '${e}'`).join("\n")}\n    branches:\n      - master`};const $=e=>{const n=`# @${"generated"}\n\nname: ${e.workflowName}\n${g(e.workflowMasterBranchOnlyTriggerPaths)}\n\njobs:\n${e.workflowJobs.map(_).join("")}`;return n};const k=[h("actions/checkout@v2",{"fetch-depth":"2"}),h("actions/setup-node@v2-beta"),h("actions/cache@v2",{path:".yarn/cache\\n.pnp.js",key:"yarn-berry-${{ hashFiles('**/yarn.lock') }}","restore-keys":"yarn-berry-"}),y("Yarn Install","yarn install --immutable")];const b=(e,n,t)=>{var s,i;return((i=(s=JSON.parse((0,r.readFileSync)((0,o.join)(a(e.information[n]).workspaceLocation,"package.json")).toString()))===null||s===void 0?void 0:s.scripts)===null||i===void 0?void 0:i[t])!=null};const v={name:"GitHub Actions Workflows Codegen",run:()=>{const e=JSON.parse((0,r.readFileSync)("workspaces.json").toString());return[{outputFilename:".github/workflows/generated-general.yml",outputContent:$({workflowName:"General",workflowJobs:[["lint",[...k,y("Format Check","yarn format:check"),y("Lint","yarn lint")]],["build",[...k,y("Build","yarn compile")]],["validate",[...k,y("Check Codegen","yarn codegen"),y("Check changed","if [[ `git status --porcelain` ]]; then exit 1; fi")]],["test",[...k,y("Test","yarn test")]]]})},...e.topologicallyOrdered.filter(n=>b(e,n,"deploy")).map(n=>{var t,r;const o=`cd-${n}`;return{outputFilename:`.github/workflows/generated-${o}.yml`,outputContent:$({workflowName:`CD ${n}`,workflowMasterBranchOnlyTriggerPaths:[...((r=(t=e.information[n])===null||t===void 0?void 0:t.dependencyChain)!==null&&r!==void 0?r:[]).map(n=>{var t;return`${(t=e.information[n])===null||t===void 0?void 0:t.workspaceLocation}/**`}),"configuration/**",`.github/workflows/generated-*-${n}.yml`],workflowJobs:[["deploy",[...k,y("Build",`yarn workspace ${n} build`),y("Install firebase","sudo npm install -g firebase-tools"),y("Deploy",`FIREBASE_TOKEN=\${{ secrets.FIREBASE_TOKEN }} yarn workspace ${n} deploy`)]]]})}})]}};const S=v;const N=[S];var E=undefined&&undefined.__awaiter||function(e,n,t,r){function adopt(e){return e instanceof t?e:new t(function(n){n(e)})}return new(t||(t=Promise))(function(t,o){function fulfilled(e){try{step(r.next(e))}catch(e){o(e)}}function rejected(e){try{step(r["throw"](e))}catch(e){o(e)}}function step(e){e.done?t(e.value):adopt(e.value).then(fulfilled,rejected)}step((r=r.apply(e,n||[])).next())})};const j=()=>E(void 0,void 0,void 0,function*(){try{m(N,true)}catch(e){console.error(e);process.exit(1)}});j()}};var n={};function __webpack_require__(t){if(n[t]){return n[t].exports}var r=n[t]={exports:{}};var o=true;try{e[t](r,r.exports,__webpack_require__);o=false}finally{if(o)delete n[t]}return r.exports}(()=>{__webpack_require__.r=(e=>{if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(e,"__esModule",{value:true})})})();__webpack_require__.ab=__dirname+"/";return __webpack_require__(906)})();