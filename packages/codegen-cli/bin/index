#!/usr/bin/env node
module.exports=(()=>{"use strict";var e={106:(e,n,r)=>{r.r(n);const t=require("fs");const o=require("path");const a=(e,n={})=>({type:"use-action",actionName:e,actionArguments:n});const i=(e,n)=>({type:"run",stepName:e,command:n});const s=e=>{switch(e.type){case"use-action":{const n=`${" ".repeat(6)}- uses: ${e.actionName}\n`;if(Object.keys(e.actionArguments).length===0){return n}const r=Object.entries(e.actionArguments).map(([e,n])=>`${" ".repeat(10)}${e}: "${n}"`).join("\n");return`${n}${" ".repeat(8)}with:\n${r}\n`}case"run":{return`${" ".repeat(6)}- name: ${e.stepName}\n${" ".repeat(8)}run: ${e.command}\n`}}};const c=([e,n])=>{return`  ${e}:\n    runs-on: ubuntu-latest\n    steps:\n${n.map(s).join("")}`};const l=e=>{if(e==null){return`on:\n  push:\n    branches:\n      - master\n  pull_request:`}return`on:\n  push:\n    paths:\n${e.map(e=>`${" ".repeat(6)}- '${e}'`).join("\n")}\n    branches:\n      - master`};const u=e=>{const n=`# @${"generated"}\n\nname: ${e.workflowName}\n${l(e.workflowMasterBranchOnlyTriggerPaths)}\n\njobs:\n${e.workflowJobs.map(c).join("")}`;return n};const p=[a("actions/checkout@v2",{"fetch-depth":"2"}),a("actions/setup-node@v2-beta"),a("actions/cache@v2",{path:".yarn/cache\\n.pnp.js",key:"yarn-berry-${{ hashFiles('**/yarn.lock') }}","restore-keys":"yarn-berry-"}),i("Yarn Install","yarn install --immutable")];const d=(e,n,r)=>{var a,i;const s=e.information[n];if(s==null)throw new Error;return((i=(a=JSON.parse((0,t.readFileSync)((0,o.join)(s.workspaceLocation,"package.json")).toString()))===null||a===void 0?void 0:a.scripts)===null||i===void 0?void 0:i[r])!=null};const f=()=>{const e=JSON.parse((0,t.readFileSync)("workspaces.json").toString());return[[".github/workflows/generated-general.yml",u({workflowName:"General",workflowJobs:[["lint",[...p,i("Format Check","yarn format:check"),i("Lint","yarn lint")]],["build",[...p,i("Build","yarn compile")]],["validate",[...p,i("Check Codegen","yarn codegen"),i("Check changed","if [[ `git status --porcelain` ]]; then exit 1; fi")]],["test",[...p,i("Test","yarn test")]]]})],...e.topologicallyOrdered.filter(n=>d(e,n,"deploy")).map(n=>{var r,t;const o=`cd-${n}`;return[`.github/workflows/generated-${o}.yml`,u({workflowName:`CD ${n}`,workflowMasterBranchOnlyTriggerPaths:[...((t=(r=e.information[n])===null||r===void 0?void 0:r.dependencyChain)!==null&&t!==void 0?t:[]).map(n=>{var r;return`${(r=e.information[n])===null||r===void 0?void 0:r.workspaceLocation}/**`}),"configuration/**",`.github/workflows/generated-*-${n}.yml`],workflowJobs:[["deploy",[...p,i("Build",`yarn workspace ${n} build`),i("Install firebase","sudo npm install -g firebase-tools"),i("Deploy",`FIREBASE_TOKEN=\${{ secrets.FIREBASE_TOKEN }} yarn workspace ${n} deploy`)]]]})]})]};const y=f;var m=undefined&&undefined.__awaiter||function(e,n,r,t){function adopt(e){return e instanceof r?e:new r(function(n){n(e)})}return new(r||(r=Promise))(function(r,o){function fulfilled(e){try{step(t.next(e))}catch(e){o(e)}}function rejected(e){try{step(t["throw"](e))}catch(e){o(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((t=t.apply(e,n||[])).next())})};const w=(0,o.join)(".github","workflows");const h=()=>m(void 0,void 0,void 0,function*(){try{if(!(0,t.existsSync)(w)){(0,t.readdirSync)(w).forEach(e=>{if(e.startsWith("generated-")){(0,t.unlinkSync)((0,o.join)(w,e))}})}(0,t.mkdirSync)(w,{recursive:true});y().forEach(([e,n])=>{(0,t.writeFileSync)(e,n)})}catch(e){console.error(e);process.exit(1)}});h()}};var n={};function __webpack_require__(r){if(n[r]){return n[r].exports}var t=n[r]={exports:{}};var o=true;try{e[r](t,t.exports,__webpack_require__);o=false}finally{if(o)delete n[r]}return t.exports}(()=>{__webpack_require__.r=(e=>{if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(e,"__esModule",{value:true})})})();__webpack_require__.ab=__dirname+"/";return __webpack_require__(106)})();