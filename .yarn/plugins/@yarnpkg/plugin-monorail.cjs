/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-monorail",
factory: function (require) {
var plugin=(()=>{var B=Object.create,f=Object.defineProperty,G=Object.defineProperties,H=Object.getOwnPropertyDescriptor,M=Object.getOwnPropertyDescriptors,q=Object.getOwnPropertyNames,g=Object.getOwnPropertySymbols,U=Object.getPrototypeOf,S=Object.prototype.hasOwnProperty,w=Object.prototype.propertyIsEnumerable;var C=(n,o,e)=>o in n?f(n,o,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[o]=e,F=(n,o)=>{for(var e in o||(o={}))S.call(o,e)&&C(n,e,o[e]);if(g)for(var e of g(o))w.call(o,e)&&C(n,e,o[e]);return n},W=(n,o)=>G(n,M(o)),K=n=>f(n,"__esModule",{value:!0});var d=n=>{if(typeof require!="undefined")return require(n);throw new Error('Dynamic require of "'+n+'" is not supported')};var x=(n,o)=>{var e={};for(var r in n)S.call(n,r)&&o.indexOf(r)<0&&(e[r]=n[r]);if(n!=null&&g)for(var r of g(n))o.indexOf(r)<0&&w.call(n,r)&&(e[r]=n[r]);return e},V=(n,o)=>()=>(n&&(o=n(n=0)),o);var Y=(n,o)=>{for(var e in o)f(n,e,{get:o[e],enumerable:!0})},z=(n,o,e)=>{if(o&&typeof o=="object"||typeof o=="function")for(let r of q(o))!S.call(n,r)&&r!=="default"&&f(n,r,{get:()=>o[r],enumerable:!(e=H(o,r))||e.enumerable});return n},m=n=>z(K(f(n!=null?B(U(n)):{},"default",n&&n.__esModule&&"default"in n?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n);var N={};Y(N,{default:()=>sn});var J,k,P,tn,sn,O=V(()=>{J=m(d("child_process")),k=(()=>{let n=new Map,r=`[${(0,J.spawnSync)("yarn",["workspaces","list","-v","--json"]).stdout.toString().trim().split(`
`).join(",")}]`,i=JSON.parse(r),c={};return i.forEach(({name:s,location:t})=>{s!=null&&(c[t]=s)}),i.forEach(({name:s,location:t,workspaceDependencies:l})=>{s!=null&&n.set(s,{workspaceLocation:t,dependencies:l.map(p=>{let a=c[p];if(a==null)throw new Error(`Bad dependency of ${a}: ${p}`);return a})})}),n})(),P=n=>{let o=[],e=[],r=new Set,i=new Set,c=s=>{var l;if(i.has(s)){if(!r.has(s))return;e.push(s);let p=e.indexOf(s),a=e.slice(p,e.length).join(" -> ");throw new Error(`Cyclic dependency detected: ${a}`)}let t=(l=k.get(s))==null?void 0:l.dependencies;if(t==null)throw new Error(`Workspace ${n} is not found!`);i.add(s),e.push(s),r.add(s),t.forEach(c),r.delete(s),e.pop(),o.push(s)};return c(n),o},tn={__type__:"@generated",information:Object.fromEntries(Array.from(k.entries()).map(r=>{var[n,i]=r,c=i,{dependencies:o}=c,e=x(c,["dependencies"]);return[n,W(F({},e),{dependencyChain:P(n)})]}).sort(([n],[o])=>n.localeCompare(o))),topologicallyOrdered:(()=>{let n=[],o=new Set;return Array.from(k.keys()).forEach(e=>{P(e).forEach(i=>{o.has(i)||(n.push(i),o.add(i))})}),n})()},sn=tn});var ln={};Y(ln,{default:()=>an});var j=m(d("fs")),v=m(d("clipanion"));var y=m(d("child_process")),R=m(d("fs")),h=m(d("path"));var u=n=>process.stderr.isTTY?o=>`[${n}m${o}[0m`:o=>o,b=u(31),A=u(32),T=u(33),I=u(34),$=u(35),dn=u(36);var Q=["\u280B","\u2819","\u2839","\u2838","\u283C","\u2834","\u2826","\u2827","\u2807","\u280F"],X=n=>{let o=0,e=new Date().getTime();return setInterval(()=>{let r=`${((new Date().getTime()-e)/1e3).toFixed(1)}s`,i=n(r),c=Q[o%10];process.stderr.write(T(`${i} ${c}\r`)),o+=1},process.stderr.isTTY?40:1e3)},L=X;var Z=n=>{let o=(e,r)=>{let i=(0,y.spawnSync)("git",["diff",e,...r?[r]:[],"--name-only","--",n]).stdout.toString().trim();return i===""?[]:i.split(`
`)};return process.env.CI?o("HEAD^","HEAD"):o("origin/main")},nn=n=>JSON.parse((0,R.readFileSync)(n).toString()),on=(n,o)=>{var i,c;let e=s=>{var t,l;return(0,h.dirname)(s)!==(0,h.join)((l=(t=n.information[o])==null?void 0:t.workspaceLocation)!=null?l:".","bin")};return((c=(i=n.information[o])==null?void 0:i.dependencyChain)!=null?c:[]).some(s=>{var p,a;let t=(a=(p=n.information[s])==null?void 0:p.workspaceLocation)!=null?a:".";return Z(t).some(e)})},en=n=>n.topologicallyOrdered.map(o=>{let e=on(n,o);return[o,e]}).filter(([,o])=>o).map(([o])=>o),rn=async()=>{let n=nn("workspaces.json"),o=en(n);o.forEach(t=>{console.error(I(`[i] \`${t}\` needs to be recompiled.`))});let e=L(t=>`[?] Compiling (${t})`),i=await Promise.all(o.map(t=>{let l=(0,y.spawn)("yarn",["workspace",t,"compile"],{shell:!0,stdio:["ignore","pipe","ignore"]}),p="";return l.stdout.on("data",a=>{p+=a.toString()}),new Promise(a=>{l.on("exit",_=>a([t,_===0,p]))})}));clearInterval(e);let c=i.map(t=>t[2]).join(""),s=i.filter(t=>!t[1]).map(t=>t[0]);return s.length===0?(console.error(A("[\u2713] All workspaces have been successfully compiled!")),!0):(console.error($("[!] Compilation finished with some errors.")),console.error(c.trim()),s.forEach(t=>{console.error(b(`[x] \`${t}\` failed to exit with 0.`))}),!1)},D=rn;var E=class extends v.Command{async execute(){return await D()?0:1}};E.paths=[["c"]];var cn={hooks:{afterAllInstalled(){let n=(O(),N).default;(0,j.writeFileSync)("workspaces.json",`${JSON.stringify(n,void 0,2)}
`)}},commands:[E]},an=cn;return ln;})();
return plugin;
}
};
